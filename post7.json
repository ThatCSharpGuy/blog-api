{
    "current_page" : 7,
    "total_pages": 8,
    "items" : 
        [   
            { 
                "id" : "/post/introduction-xamarin-forms-sharpuladora/",
                "tv" : false,
                "title": "Introduction to Xamarin.Forms (Sharpuladora app)", 
                "date": "2015-12-16 12:00:00 -0600",
                "featured_tag": "XamarinForms",
                "featured_image": "http://thatcsharpguy.com/postimagesfeatured.png",
                "summary": "This guide will take you step by step to create your first Xamarin.Forms app."
            },
            { 
                "id" : "/post/c-sharp-juegos/",
                "tv" : false,
                "title": "Cosas para hacer en C#: Juegos", 
                "date": "2015-12-09 15:00:00 -0600",
                "featured_tag": "AprendeCSharp",
                "featured_image": "http://thatcsharpguy.com/postimagesfeatured.jpg",
                "summary": "C# no es solo trabajo de oficina de 9 a 5, también se pueden hacer algunas otras cosas bastante divertidas pero sobre todo interesantes, como videojuegos."
            },
            { 
                "id" : "/post/xamarin-forms-uwp/",
                "tv" : false,
                "title": "Xamarin.Forms 2 and UWP", 
                "date": "2015-12-06 15:00:00 -0600",
                "featured_tag": "XamarinForms",
                "featured_image": "http://thatcsharpguy.com/postimagesfeatured.png",
                "summary": "Xamarin 4 has everything you need to create great mobile apps. Check out Universal Windows Platform Apps, my favorite feature."
            },
            { 
                "id" : "/post/introduccion-xamarin-forms-sharpuladora/",
                "tv" : false,
                "title": "Introducción a Xamarin.Forms (app Sharpuladora)", 
                "date": "2015-11-26 15:00:00 -0600",
                "featured_tag": "XamarinForms",
                "featured_image": "http://thatcsharpguy.com/postimagesfeatured.png",
                "summary": "Esta es una guía que te llevará paso a paso a crear tu primera aplicación en Xamarin.Forms."
            },
            { 
                "id" : "/post/anonimos-en-c-sharp/",
                "tv" : false,
                "title": "Tipos anónimos en C#", 
                "date": "2015-11-26 15:00:00 -0600",
                "featured_tag": "AprendeCSharp",
                "featured_image": "http://thatcsharpguy.com/postimagesfeatured.png",
                "summary": "Para cada tipo anónimo que usamos, el compilador crea una definición de clase para dicho tipo por nosotros, ahórrandonos así la tarea de tener que hacerlo."
            },
            { 
                "id" : "/post/organizacion-codigo-visual-studio/",
                "tv" : false,
                "title": "¿Cómo organiza mi código Visual Studio?", 
                "date": "2015-11-18 15:00:00 -0600",
                "featured_tag": "VisualStudio",
                "featured_image": "http://thatcsharpguy.com/postimagesfeatured.jpg",
                "summary": "Si alguna vez has usado un IDE para desarrollar alguna aplicación tal vez te hayas preguntado cómo es que ese tipo de programas saben en dónde están los componentes para cada una de las cosas que hacen que tu app compile o funcione."
            },
            { 
                "id" : "/post/xamarin-android-vs-traditional/",
                "tv" : false,
                "title": "Xamarin.Android vs traditional Android", 
                "date": "2015-11-16 15:00:00 -0600",
                "featured_tag": "Xamarin",
                "featured_image": "http://thatcsharpguy.com/postimagesfeatured.jpg",
                "summary": "There are no significant differences between traditional Android development and Xamarin.Android, meaning that if you have previous knowledge you can apply it without concerns but instead of writing Java you will be writing awesome C# code that can potentially be shared along any other platform."
            },
            { 
                "id" : "/post/code-organization-visual-studio/",
                "tv" : false,
                "title": "How is my code organized in Visual Studio?", 
                "date": "2015-11-16 15:00:00 -0600",
                "featured_tag": "VisualStudio",
                "featured_image": "http://thatcsharpguy.com/postimagesfeatured.jpg",
                "summary": "If you have ever used an IDE to develop any application you might have wondered how do these kind of programs know where are the components for each one of the things that make your app compile or run. In this post I'll try to explain how Xamarin Studio and Visual Studio keeps that control."
            },
            { 
                "id" : "/post/linq-en-c-sharp/",
                "tv" : false,
                "title": "Linq en C#", 
                "date": "2015-11-11 14:00:00 -0600",
                "featured_tag": "AprendeCSharp",
                "featured_image": "http://thatcsharpguy.com/postimagesfeatured.png",
                "summary": "Linq nos otorga la posibilidad de usar un lenguaje bastante similar al SQL dentro de nuestro código C# para consultar un origen de datos."
            },
            { 
                "id" : "/post/xamarin-forms-mvvm-21-nov-2015/",
                "tv" : false,
                "title": "Xamarin.Forms y MVVM en la ESCOM (21 de noviembre de 2015)", 
                "date": "2015-11-02 16:00:00 -0600",
                "featured_tag": "Xamarin",
                "featured_image": "http://thatcsharpguy.com/postimages/commons/event.png",
                "summary": "En el evento haremos juntos una app utilizando estas tecnologías mientras platicamos un poco acerca de MVVM y cómo implementarlo junto con Xamarin.Forms."
            },
            { 
                "id" : "/post/que-son-portable-class-library/",
                "tv" : false,
                "title": "¿Qué es una Portable Class Library?", 
                "date": "2015-11-02 04:00:00 -0600",
                "featured_tag": "VisualStudio",
                "featured_image": "http://thatcsharpguy.com/postimagesfeatured.png",
                "summary": "Las bibliotecas de clases portables nos permiten compartir código entre distintas plataformas de .NET"
            },
            { 
                "id" : "/post/var-en-c-sharp/",
                "tv" : false,
                "title": "¿Qué es var en C#?", 
                "date": "2015-10-29 14:00:00 -0600",
                "featured_tag": "AprendeCSharp",
                "featured_image": "http://thatcsharpguy.com/postimagesfeatured.jpg",
                "summary": "Usar la palabra var significa que estamos dejándole al compilador la tarea de asignar un tipo a nuestras variables."
            },
            { 
                "id" : "/post/arreglos-en-c-sharp-parte-3/",
                "tv" : false,
                "title": "Arreglos en C# (multidimensionales rectangulares)", 
                "date": "2015-10-23 17:00:00 -0500",
                "featured_tag": "AprendeCSharp",
                "featured_image": "http://thatcsharpguy.com/postimagesfeatured.png",
                "summary": "A diferencia de los arreglos escalonados, los rectangulares son lo más parecido a matrices que podemos encontrar en C#."
            },
            { 
                "id" : "/post/arreglos-en-c-sharp-parte-2/",
                "tv" : false,
                "title": "Arreglos en C# (multidimensionales escalonados)", 
                "date": "2015-10-22 16:00:00 -0500",
                "featured_tag": "AprendeCSharp",
                "featured_image": "http://thatcsharpguy.com/postimagesfeatured.png",
                "summary": "Los arreglos escalonados (o jagged arrays) son los tipos de arreglos multidimensionales más conocidos, y es que también son compunes en otros lenguajes de programación. Un arreglo escalonado no es más que un arreglo de arreglos."
            },
            { 
                "id" : "/post/arreglos-en-c-sharp-parte-1/",
                "tv" : false,
                "title": "Arreglos en C# (unidimensionales)", 
                "date": "2015-10-22 16:00:00 -0500",
                "featured_tag": "AprendeCSharp",
                "featured_image": "http://thatcsharpguy.com/postimagesfeatured.png",
                "summary": "En C# llamamos arreglo a una colección de objetos, dicha colección tiene longitud definida y esta no puede cambiar con el flujo del programa, esto podrá sonar limitante, pero al trabajar con arreglos se obtiene un mejor desempeño que con cualquier otra colección. Usando el lenguaje podemos crear, recorrer y manipular arreglos de cualquier tipo de objeto."
            }	
        ]
}


