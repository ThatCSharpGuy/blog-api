{	
	"id" : "/post/tips-xamarin-forms/",
	"tv" : false,
	"date": "2016-05-30 03:00:00 -0500",
	"title" : "Tips de desempeño en Xamarin Forms",
	"author" : "Antonio Feregrino Bolaños",
	"featured_image": "http://thatcsharpguy.com/postimages//xamarin-forms/tips.png",
	"tags" :
	[ 
		"XamarinForms",
		"Xamarin"
	],
	"content" : "<p>Esta es la traducción de <a href=\"http://kent-boogaart.com/blog/jason-smith's-xamarin-forms-performance-tips\" target=\"_blank\">un post de Kent Boogaart</a> en donde recopiló una serie de tips sobre cómo mejorar el desempeño de apps hechas con Xamarin Forms.</p>

<hr />

<p><br /></p>

<p>Jason Smith, ingeniero a cargo de Xamarin Forms, hizo una <a href=\"https://www.youtube.com/watch?v=RZvdql3Ev0E\" target=\"_blank\" rel=\"nofollow\">fantástica presentación</a> en la conferencia Evolve de este año. En ella, él repasó una larga lista de tips de desempeño, así como una sesión de preguntas y respuestas. No he podido encontrar estos tips por escrito (en diapositivas, transcripción o post en blog). Con el interés de hacer esta información más fácilmente accesible para mi y otros, decidí resumirlos aquí.</p>

<p>Me tomé la libertad de reacomodar y agrupar tips relacionados, pero quiero dejar en claro que este es el contenido de Jason, no el mío.</p>

<h2 id=\"general\">General</h2>
<p><strong>HABILITA</strong> la compilación de XAML si estás usándolo para tus vistas:</p>

<p><figure class="highlight"><pre><code class="language-csharp" data-lang="csharp"><span class="na">[assembly: XamlCompilation(XamlCompilationOptions.Compile)]</span></code></pre></figure></p>

<p><strong>NO USES</strong> <em>bindings</em> cuando asignaciones estáticas sean suficientes.</p>

<p><strong>NO</strong> asignes valores por default. Hacerlo conlleva un costo, aunque nunca modifiques el valor.</p>

<p><strong>EVITA</strong> usar transparencias. Busca lograr efectos similares con la opacidad al 100%.</p>

<p><strong>USA</strong> <code>async</code> / <code>await</code> para evitar bloquear el hilo principal.</p>

<p><strong>CONSIDERA</strong> crear los controles en un hilo distinto al principal, pero asegurate de agregarlos al <em>árbol visual</em> en el hilo principal. De no hacerlo no hará que tu app falle inmediatamente, pero corromperá su estado. Se especialmente cuidadoso si estás usando <code>MessagingCenter</code> en el constructor de tu control.</p>

<h2 id=\"layout\">Layout</h2>
<p><strong>NO USES</strong> un <code>ContentView</code> con <code>Padding</code> solo para aplicarle un margen al hijo. Usa, en su lugar, la propiedad <code>Margin</code> en el hijo (disponible desde Xamarin.Forms 2.2).</p>

<p><strong>NO USES</strong> un <code>StackLayout</code> para contener un solo hijo.</p>

<p><strong>NO USES</strong> un <code>Grid</code> cuando con <code>StackLayout</code> basta.</p>

<p><strong>NO USES</strong> múltiples <code>StackLayout</code>s cuando con un <code>Grid</code> es suficiente.</p>

<p><strong>TOMA EN CUENTA</strong> las propiedades <code>Spacing</code> (<code>ColumnSpacing</code> / <code>RowSpacing</code> en <code>Grid</code>) y <code>Padding</code>. En lugar de esto:</p>

<p><figure class="highlight"><pre><code class="language-xml" data-lang="xml"><span class="nt">&lt;/p&gt;</span>
<span class="nt">&lt;stacklayout&gt;</span>
    <span class="nt">&lt;contentview</span> <span class="na">padding=</span><span class="s">\&quot;10,10,10,5\&quot;</span><span class="nt">&gt;</span>
        <span class="nt">&lt;label</span> <span class="na">text=</span><span class="s">\&quot;1\&quot;</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;/contentview&gt;</span>
    <span class="nt">&lt;contentview</span> <span class="na">padding=</span><span class="s">\&quot;10,0,10,5\&quot;</span><span class="nt">&gt;</span>
        <span class="nt">&lt;label</span> <span class="na">text=</span><span class="s">\&quot;2\&quot;</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;/contentview&gt;</span>
    <span class="nt">&lt;contentview</span> <span class="na">padding=</span><span class="s">\&quot;10,0,10,0\&quot;</span><span class="nt">&gt;</span>
        <span class="nt">&lt;label</span> <span class="na">text=</span><span class="s">\&quot;3\&quot;</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;/contentview&gt;</span>
<span class="nt">&lt;/stacklayout&gt;</span>
<span class="nt">&lt;p&gt;</span></code></pre></figure></p>

<p>Haz esto:</p>

<p><figure class="highlight"><pre><code class="language-xml" data-lang="xml"><span class="nt">&lt;/p&gt;</span>
<span class="nt">&lt;stacklayout</span> <span class="na">padding=</span><span class="s">\&quot;10\&quot;</span> <span class="na">spacing=</span><span class="s">\&quot;5\&quot;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;label</span> <span class="na">text=</span><span class="s">\&quot;1\&quot;</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;label</span> <span class="na">text=</span><span class="s">\&quot;2\&quot;</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;label</span> <span class="na">text=</span><span class="s">\&quot;3\&quot;</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;/stacklayout&gt;</span>
<span class="nt">&lt;p&gt;</span></code></pre></figure></p>

<p><strong>PREFIERE</strong> usar <code>LayoutOptions.Fill</code> (o <code>LayoutOptions.FillAndExpand</code>). Estos son los valores por default y la <em>mayoría</em> de las veces no deben ser modificados.</p>

<p><strong>PREFIERE</strong> filas/columnas de <code>Grid</code> con tamaño definido con <code>*</code> en lugar de <code>Auto</code>.</p>

<p><strong>NO USES</strong> múltiples <code>StackLayout</code>s para simular un <code>Grid</code>.</p>

<p><strong>NO USES</strong> <code>RelativeLayout</code> si es posible.</p>

<p><strong>AÑADE</strong> agrega los controles hijos a su contenedor padre antes de agregar el padre a la pantalla.</p>

<p>En lugar de esto:</p>

<p><figure class="highlight"><pre><code class="language-csharp" data-lang="csharp"><span class="kt">var</span> <span class="n">page</span> <span class="p">=</span> <span class="k">new</span> <span class="n">ContentPage</span><span class="p">();</span>
<span class="kt">var</span> <span class="n">stackLayout</span> <span class="p">=</span> <span class="k">new</span> <span class="n">StackLayout</span><span class="p">();</span>
<span class="kt">var</span> <span class="n">image</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Image</span> <span class="p">{</span> <span class="n">Source</span> <span class="p">=</span> <span class="err">“</span><span class="n">person</span><span class="p">.</span><span class="n">png</span><span class="err">”</span> <span class="p">};</span>
<span class="kt">var</span> <span class="n">label</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Label</span> <span class="p">{</span> <span class="n">Text</span> <span class="p">=</span> <span class="err">“</span><span class="n">Name</span><span class="err">”</span> <span class="p">};&lt;/</span><span class="n">p</span><span class="p">&gt;</span>

<span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;</span><span class="n">page</span><span class="p">.</span><span class="n">Content</span> <span class="p">=</span> <span class="n">stackLayout</span><span class="p">;&lt;/</span><span class="n">p</span><span class="p">&gt;</span>

<span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;</span><span class="n">navigationPage</span><span class="p">.</span><span class="n">Push</span><span class="p">(</span><span class="n">page</span><span class="p">);</span>
<span class="n">stackLayout</span><span class="p">.</span><span class="n">Children</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">image</span><span class="p">);</span>
<span class="n">stackLayout</span><span class="p">.</span><span class="n">Children</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">label</span><span class="p">);</span></code></pre></figure></p>

<p>Haz esto:</p>

<p><figure class="highlight"><pre><code class="language-csharp" data-lang="csharp"><span class="kt">var</span> <span class="n">page</span> <span class="p">=</span> <span class="k">new</span> <span class="n">ContentPage</span><span class="p">();</span>
<span class="kt">var</span> <span class="n">stackLayout</span> <span class="p">=</span> <span class="k">new</span> <span class="n">StackLayout</span><span class="p">();</span>
<span class="kt">var</span> <span class="n">image</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Image</span> <span class="p">{</span> <span class="n">Source</span> <span class="p">=</span> <span class="err">“</span><span class="n">person</span><span class="p">.</span><span class="n">png</span><span class="err">”</span> <span class="p">};</span>
<span class="kt">var</span> <span class="n">label</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Label</span> <span class="p">{</span> <span class="n">Text</span> <span class="p">=</span> <span class="err">“</span><span class="n">Name</span><span class="err">”</span> <span class="p">};&lt;/</span><span class="n">p</span><span class="p">&gt;</span>

<span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;</span><span class="n">stackLayout</span><span class="p">.</span><span class="n">Children</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">image</span><span class="p">);</span>
<span class="n">stackLayout</span><span class="p">.</span><span class="n">Children</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">label</span><span class="p">);</span>
<span class="n">page</span><span class="p">.</span><span class="n">Content</span> <span class="p">=</span> <span class="n">stackLayout</span><span class="p">;&lt;/</span><span class="n">p</span><span class="p">&gt;</span>

<span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;</span><span class="n">navigationPage</span><span class="p">.</span><span class="n">Push</span><span class="p">(</span><span class="n">page</span><span class="p">);</span></code></pre></figure></p>

<p>XAML ya agrega los controles en el orden <em>correcto</em>.</p>

<p><strong>AÑADE</strong> los controles a la página en el constructor en lugar de en el método <code>OnAppearing</code>.</p>

<p><strong>PREFIERE</strong> animar los controles usando las propiedades <code>TranslationX</code> y <code>TranslatonY</code>.</p>

<p><strong>NO</strong> llames al método <code>Layout()</code> (y especialmente <code>ForceLayout()</code>).</p>

<p><strong>CONSIDERA</strong> crear un <em>custom layout</em>. Es la mejor opción si es fácil describir el orden de tus controles con palabras pero difícil de implementarlo con los <em>layouts</em> que vienen en forms, si <code>AbsoluteLayout</code> hace <em>casi</em> lo que te gusta, o si simplemente necesitas velocidad pura.</p>

<p><strong>NO USES</strong> un <code>StackLayout</code> dentro de un <code>ScrollView</code> para simular un <code>ListView</code>.</p>

<p><strong>USA</strong> un <code>Grids</code> para hacer ordenamiento por capas.</p>

<h2 id=\"labels\">Labels</h2>
<p><strong>NO USES</strong> múltiples <code>Label</code>s cuando con una (usando <em>spans</em> con <code>FormattedText</code> cuando es necesario) basta.</p>

<p><strong>DESACTIVA</strong> <code>Label</code> <em>wrapping</em> si es posible (<code>LineBreakMode=\"NoWrap\"</code>).</p>

<p><strong>NO</strong> cambies el valor de <code>VerticalTextAlignment</code> a menos que sea necesario. El valor por default elimina un ciclo de medición completo.</p>

<p><strong>PREFIERE</strong> las propiedades <code>VerticalTextAlignment</code> y <code>HorizontalTextAlignment</code> sobre <code>VerticalOptions</code> y <code>HorizontalOptions</code>.</p>

<p><strong>EVITA</strong> actualizaciones esporádicas a <code>Label</code>s. Si las actualizaciones son a múltiples <code>Label</code>s, agrupa las actualizaciones de ser posible.</p>

<h2 id=\"listviews\">ListViews</h2>

<p><strong>NO</strong> pongas un <code>ListView</code> dentro de un <code>ScrollView</code>. Usa las propiedades <code>Header</code> y <code>Footer</code> en su lugar.</p>

<p><strong>NO USES</strong> <code>TableView</code> donde puedas usar <code>ListView</code>. Hoy en día, la única razón real para usar un <code>TableView</code> es por interfaces del estilo de un panel de configuración en el que cada celda tiene un contenido único.</p>

<p><strong>USA</strong> <code>ListViewCachingStrategy.RecycleElement</code> cuando puedas. Si no te funciona, revisa por qué no lo hace, realmente vale la pena. Debes activar esta propiedad manualmente.</p>

<p><strong>USA</strong> los selectores de <em>data template</em> para facilitar el uso de distintos controles dentro de un solo <code>ListView</code>. No sobreescribas <code>OnBindingContextChanged</code> para obtener el mismo efecto.</p>

<p><strong>EVITA</strong> usar <code>IEnumerable&lt;T&gt;</code> como origen de datos para un <code>ListView</code>, en su lugar, intenta usar <code>IList&lt;T&gt;</code>.</p>

<p><strong>NO</strong> anides <code>ListView</code>s, en su lugar utiliza grupos dentro de uno. No hay soporte para anidamiento de <code>ListViews</code> y hará que tu aplicación falle.</p>

<p><strong>USA</strong> la propiedad <code>HasUnevenRows</code> cuando tu <code>ListView</code> tenga filas de distintos tamaños. Si el contenido de una celda es modificado dinámicamente (tal vez despuésde cargar información de la base de datos), asegúrate de llamar <code>ForceUpdateSize()</code> en la celda.</p>

<h2 id=\"navegacin\">Navegación</h2>
<p><strong>USA</strong> <code>await</code> cuando ejecutes <code>PushAsync</code> y <code>PopAsync</code>. El no hacerlo reduce el desempeño y la <em>correctitud</em> de tu aplicación.</p>

<p><strong>EVITA</strong> ocultar / mostrar la barra de navegación.</p>

<p><strong>USA</strong> el <a href=\"https://gist.github.com/jassmith/a3b2a543f99126782936\" target=\"_blank\" rel=\"nofollow\">soporte para AppCompat</a> para Android. Esto mejorará el desempeño y apariencia de la aplicación.</p>

<h2 id=\"imgenes\">Imágenes</h2>
<p><strong>TOMA EN CUENTA</strong> que Android no se optimiza el tamaño de la imagen.</p>

<p><strong>ASIGNA</strong> <code>true</code> a <code>Image.IsOpaque</code> si es posible.</p>

<p><strong>CARGA</strong> imagenes desde <em>Content</em> en lugar de <em>Recursos</em>.</p>

<h2 id=\"bindableproperty\">BindableProperty</h2>
<p><strong>NO USES</strong> la versión genérica de <code>BindableProperty.Create</code> (usa la versión basada en <code>string</code> en conjunto con el operador <code>nameof</code>).</p>

<h2 id=\"carouselpage\">CarouselPage</h2>

<p><strong>NO USES</strong> la <code>CarouselPage</code></p>

<p><strong>USA</strong> un <code>ContentView</code> dentro de una `ContentPage</p>

<h2 id=\"messagingcenter\">MessagingCenter</h2>
<p><strong>PREFIERE</strong> usar otro framework (como Prism).</p>

<p><strong>USA</strong> un método estático o de instancia en lugar de una expresión lambda para el <code>MessagingCenter</code>.</p>
"
}