{	
	"id" : "/post/bubble-display-netduino-plus-2/",
	"tv" : false,
	"date": "2015-07-17 13:31:38 -0500",
	"title" : "Conectando un Bubble Display a un Netduino Plus 2",
	"author" : "Antonio Feregrino Bolaños",
	"featured_image": "http://thatcsharpguy.com/postimages/bubble-display-netduino-plus-2/featured.png",
	"tags" : ["Netduino"],
	"content": "<p>Para un proyecto Instrumentación en la escuela decidí desempolvar mi Netduino Plus 2, en el proyecto decesitábamos mostrar las mediciones de tres distintos sensores en un par de displays de 7 segmentos, para ello decidí comprar un Bubble Display que no trae 2 sino 4 displays de 7 segmentos en un encapsulado muy estético. Al principio no tenía ni la menor idea de cómo cablearlo, pero consultando el datasheet resultó sencillo.</p>\n<h3>Material</h3>\n<p>Además del Bubble Display, también usé 7 resistencias de 330 Ω, 4 de 1kΩ y 4 transistores BC557.\nEl bubble display no necesita explicación, en México lo compré  <a target=\"_blank\" href=\"http://www.330ohms.com/Display-de-Burbuja--7-Segmentos-4-dgitos_p_345.html\">aquí</a>. Las resistencias de 330 son para no dañar el display (se conectan entre este y la tarjeta del Netduino), las resistencias de 1k se usan para la misma razón pero conectado a los transistores mientras que los transistores se emplean como switches que permiten el flujo de la corriente a tierra ya que el display es de cátodo común.</p>\n\n<h3>Programación</h3>\n<p>La parte que más me agrada de esto es la programación, para hacer uso del display, cree una clase llamada Bubble7 a través de la cual se pude interactuar con el display y cada uno de sus segmentos. El constructor de la clase recibe como parámetros los pines a los que está conectado display y los transistores.</p>\n\n<p>Expone varios métodos, entre ellos el de display imprimir un dígito <code>PrintDigit</code>, también es importante el método <code>TurnOnDisplay</code> ya que con este se indica qué display estará activo y mostrará datos. Para crear el efecto de que todos los displays están encendidos a la vez, debe existir un retardo muy pequeño entre que se enciende un display mostrando un número y otro, como se muestra en el método <code>ShowNumber</code>. La clase está en <a target=\"_blank\" href=\"https://gist.github.com/fferegrino/22cda60be970e98c90a1\">GitHub</a> para su descarga, acá pongo una muestra de cómo se peuede usar para implementar un contador.</p>\n\n<pre class=\"csharp\">\npublic class Program\n\n    public static void Main()\n    \n        Bubble7 bubble = new Bubble7(Pins.GPIO_PIN_D0, Pins.GPIO_PIN_D1,\n            Pins.GPIO_PIN_D2, Pins.GPIO_PIN_D4, Pins.GPIO_PIN_D3,\n            Pins.GPIO_PIN_D6, Pins.GPIO_PIN_D5, Pins.GPIO_PIN_D7,\n            Pins.GPIO_PIN_D8, Pins.GPIO_PIN_D9, Pins.GPIO_PIN_D10);\n\n        int count = 0;\n        while (true)\n        \n            if (count == 9999)\n                count = 0;\n            bubble.ShowNumber(count++);\n        \n    \n\n</pre>\n<h4>Sugerencia de armado</h4>\n<blockquote class=\"imgur-embed-pub\" lang=\"en\" data-id=\"a/qaOH1\" data-context=\"false\"><a href=\"//imgur.com/a/qaOH1\">Bubble Display set up</a></blockquote>\n<script async=\"\" src=\"//s.imgur.com/min/embed.js\" charset=\"utf-8\"></script>\n\n"
}