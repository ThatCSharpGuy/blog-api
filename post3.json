{
    "current_page" : 3,
    "total_pages": 8,
    "items" : 
        [   
            { 
                "id" : "/post/atributos-c-sharp/",
                "tv" : false,
                "title": "Xamarin.Auth", 
                "date": "2016-09-12 14:00:01 -0500",
                "featured_tag": "AprendeCSharp",
                "featured_image": "http://thatcsharpguy.com/postimages//aprende-c-sharp/attrs/featured.png",
                "summary": "Los atributos nos ofrecen otra manera de interactuar con el código que escribimos, ya sea dándole información al compilador o extendiendo las definiciones de nuestros métodos, propiedades o clases en tiempo de ejecución."
            },
            { 
                "id" : "/post/commonmark/",
                "tv" : false,
                "title": "CommonMark.NET", 
                "date": "2016-09-05 14:00:01 -0500",
                "featured_tag": "NuGetRecomendado",
                "featured_image": "http://thatcsharpguy.com/postimages//commonmark/featured.png",
                "summary": "Convertir de un documento escrito con el lenguaje Markdown a uno escrito en HTML con este paquete de NuGet es muy intuitivo, además de que su API permite una personalización de la salida bastante intuitiva."
            },
            { 
                "id" : "/tv/inyeccion-dependencias/",
                "tv" : true,
                "title": "La inyección de dependencias", 
                "date": "2016-09-05 13:00:00 -0500",
                "featured_tag": "Tv",
                "featured_image": "http://thatcsharpguy.com/postimages//tv/di/featured.jpg",
                "summary": "La inyección de dependencias es un patrón de diseño que nos permite implementar en nuestras aplicaciones el principio de inversión de control. Consiste en evitar la instanciación de unos objetos dentro de otros, evitando así el acoplamiento fuerte."
            },
            { 
                "id" : "/post/revisando-github/",
                "tv" : false,
                "title": "Revisando mis repos en GitHub", 
                "date": "2016-08-29 14:00:01 -0500",
                "featured_tag": "AprendeCSharp",
                "featured_image": "http://thatcsharpguy.com/postimages//mis-repos-github/featured.png",
                "summary": "Un post un poco diferente, en este no hablaré sobre alguna característica de C# o un paquete de NuGet, sino de proyectos, pruebas y aplicaciones en los que lo he usado. Conoce algunas de las cosas que he hecho y subido a GitHub."
            },
            { 
                "id" : "/post/c-sharp-events/",
                "tv" : false,
                "title": "Events en C#", 
                "date": "2016-08-22 14:00:01 -0500",
                "featured_tag": "AprendeCSharp",
                "featured_image": "http://thatcsharpguy.com/postimages//aprende-c-sharp/events.png",
                "summary": "Un evento no es más que un mensaje que se envía de un objeto (el emisor) a otros (los receptores) cada vez que se cumple cierta condición o un cambio ocurre en él."
            },
            { 
                "id" : "/post/servicios-web-movil-xamarin/",
                "tv" : false,
                "title": "Servicios web resistentes en aplicaciones móviles", 
                "date": "2016-08-15 14:00:01 -0500",
                "featured_tag": "Xamarin",
                "featured_image": "http://thatcsharpguy.com/postimages//xamarin-forms/resilient/featured.jpg",
                "summary": "Llevamos nuestros dispositivos con nosotros a donde sea. Los tenemos en casa, en el trabajo y durante las vacaciones. Están con nosotros sin importar si estamos conectados a internet wifi de 1 gigabit o en una red 4g."
            },
            { 
                "id" : "/tv/programar-con-estilo/",
                "tv" : true,
                "title": "Programando con estilo", 
                "date": "2016-08-10 13:00:00 -0500",
                "featured_tag": "Tv",
                "featured_image": "http://thatcsharpguy.com/postimages//tv/estilo/featured.jpg",
                "summary": "Programar con estilo es escribir nuestros programas fáciles de entender, bien documentados y siguiendo convenciones de escritura previamente adoptadas."
            },
            { 
                "id" : "/post/akavache/",
                "tv" : false,
                "title": "Persistencia de datos con Akavache", 
                "date": "2016-08-08 14:00:01 -0500",
                "featured_tag": "NuGetRecomendado",
                "featured_image": "http://thatcsharpguy.com/postimages//akavache/featured.jpg",
                "summary": "Dale memoria a tus aplicaciones con este paquete de NuGet, con Akavache almacena información en el dispositivo del usuario para dar una impresión de fluidez y rapidez en tu app."
            },
            { 
                "id" : "/post/c-sharp-enums/",
                "tv" : false,
                "title": "Enums en C#", 
                "date": "2016-08-01 14:00:01 -0500",
                "featured_tag": "AprendeCSharp",
                "featured_image": "http://thatcsharpguy.com/postimages//aprende-c-sharp/enums.png",
                "summary": "Los enum son un tipo de dato que nos permite expresar valores constantes, con la particularidad de poderlos agrupar lógicamente de acuerdo a la relación que tienen unos con otros."
            },
            { 
                "id" : "/post/formatted-number-entry/",
                "tv" : false,
                "title": "Formatted number entry", 
                "date": "2016-08-01 03:00:00 -0500",
                "featured_tag": "XamarinForms",
                "featured_image": "http://thatcsharpguy.com/postimages//xamarin-forms/formattednumberentry/featured.png",
                "summary": "I faced with the necessity of having a &quot;formatted textbox&quot; where the user could enter a given integer number and have it formatted instantly to a comma separated number."
            },
            { 
                "id" : "/post/map-filter-reduce-f-sharp/",
                "tv" : false,
                "title": "Map, reduce y filter en F#", 
                "date": "2016-07-25 14:00:00 -0500",
                "featured_tag": "AprendeFSharp",
                "featured_image": "http://thatcsharpguy.com/postimages//map-reduce-filter/featured.png",
                "summary": "F# es un gran lenguaje, y unas de las cosas que me gusta de él es que está orientado completamente a la programación funcional. Comparte varias características con lenguajes como Elixir y otras pocas con lenguajes como Swift."
            },
            { 
                "id" : "/post/map-filter-reduce-c-sharp/",
                "tv" : false,
                "title": "Map, reduce y filter en C#", 
                "date": "2016-07-25 14:00:00 -0500",
                "featured_tag": "AprendeCSharp",
                "featured_image": "http://thatcsharpguy.com/postimages//map-reduce-filter/featured.png",
                "summary": "C# es un gran lenguaje, y unas de las cosas que me gusta de él, es que puedes programar funcionalmente aún si el lenguaje no es 100% funcional. Comparte algunas de sus características con lenguajes como Swift y F#."
            },
            { 
                "id" : "/tv/first-class-citizens/",
                "tv" : true,
                "title": "Ciudadanos de primera clase", 
                "date": "2016-07-20 13:00:00 -0500",
                "featured_tag": "Tv",
                "featured_image": "http://thatcsharpguy.com/postimages//tv/first-class-citizens/fcc.jpg",
                "summary": "En programación, cuando se habla de ciudadanos de primera clase es para hacer referencia a un elemento del lenguaje que posee la mayor cantidad de privilegios."
            },
            { 
                "id" : "/post/usos-using-2/",
                "tv" : false,
                "title": "Uso de using", 
                "date": "2016-07-18 14:00:01 -0500",
                "featured_tag": "AprendeCSharp",
                "featured_image": "http://thatcsharpguy.com/postimages//aprende-c-sharp/using-2.png",
                "summary": "En C#, también podemos emplear using para especificar un bloque de código asociado a una o varias instancias de una clase que implemente IDisposable."
            },
            { 
                "id" : "/tv/sal-sintactica/",
                "tv" : true,
                "title": "Sal sintáctica", 
                "date": "2016-07-13 13:00:00 -0500",
                "featured_tag": "Tv",
                "featured_image": "http://thatcsharpguy.com/postimages//tv/sal-sintactica/featured.jpg",
                "summary": "La sal sintáctica, cuyo objetivo es supuestamente ser lo totalmente opuesto a la azúcar, hacen difícil escribir mal código y, en teoría, hacen más difícil de usar un lenguaje."
            }	
        ]
}


